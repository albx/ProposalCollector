@implements IAsyncDisposable

@inject IJSRuntime Js

@if (string.IsNullOrWhiteSpace(Value))
{
    <button class="btn btn-primary" @onclick="VerifyCaptchaAsync" type="button">Submit</button>
}
else
{
    @ChildContent
}

@code {
    [Parameter]
    [EditorRequired]
    public string SiteKey { get; set; } = string.Empty;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    private IJSObjectReference module;

    private async Task VerifyCaptchaAsync()
    {
        var token = await module.InvokeAsync<string>("execute", SiteKey);
        await ValueChanged.InvokeAsync(token);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await Js.InvokeAsync<IJSObjectReference>(
                "import",
                "./_content/BlazorUtils/Components/Captcha.razor.js");

            await module.InvokeVoidAsync(
                "init",
                SiteKey);
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.InvokeVoidAsync("removeScript");
            await module.DisposeAsync();
        }
    }
}
